#include "singles.fcl"
#include "services_dunendlar.fcl"

process_name: SinglesGen

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "single_hist_dunend2x2.root" }
  TimeTracker:  {}
  MemoryTracker:         {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  GeometryConfigurationWriter: {}
  @table::dunend2x2_services
  IFDH: {}
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
   generator: @local::standard_singlep
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prod_muplus_dunend2x2.root"
   dataTier:    "generated"
   compressionLevel: 1
 }
}

physics.producers.generator.PDG: [ -13 ]           # mu+
physics.producers.generator.PosDist: 0             # Flat position dist.
physics.producers.generator.X0: [ 0.0 ]
physics.producers.generator.Y0: [ 50.0 ]
physics.producers.generator.Z0: [ 0.0 ]
physics.producers.generator.T0: [ 0.0 ]
physics.producers.generator.SigmaX: [ 40 ]      # x = (0, 256)
physics.producers.generator.SigmaY: [ 0.0 ]      # y = (-116.5, 116.5)
physics.producers.generator.SigmaZ: [ 40 ]      # z = (0, 1037)
physics.producers.generator.SigmaT: [ 0.0 ]        # In time
physics.producers.generator.PDist: 0               # Flat momentum dist. (0.1-2.0 GeV)
physics.producers.generator.P0: [ 10 ]
physics.producers.generator.SigmaP: [ 0 ]
physics.producers.generator.AngleDist: 0           # Flat angle dist.
physics.producers.generator.Theta0XZ: [ 0. ]       # y-azimuth
physics.producers.generator.Theta0YZ: [ -90. ]       # y-latitude
physics.producers.generator.SigmaThetaXZ: [ 180. ] # Quasi-isotropic
physics.producers.generator.SigmaThetaYZ: [ 45. ]
